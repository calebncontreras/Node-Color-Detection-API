{"version":3,"sources":["../src/api.js"],"names":["app","db","client","connection","host","user","password","database","use","bodyParser","json","get","req","res","select","from","then","users","send","err","console","log","post","register","handleRegister","bcrypt","signin","handleSignin","image","handleApiCall","put","handleImageSuccess","forEach","id","params","userId","listen","process","env","PORT"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AACA,IAAMA,GAAG,GAAG,0BAAZ;AAEA,IAAMC,EAAE,GAAG,sBAAK;AACdC,EAAAA,MAAM,EAAE,IADM;AAEdC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE,WADI;AAEVC,IAAAA,IAAI,EAAE,UAFI;AAGVC,IAAAA,QAAQ,EAAE,UAHA;AAIVC,IAAAA,QAAQ,EAAE;AAJA;AAFE,CAAL,CAAX;AAUAP,GAAG,CAACQ,GAAJ,CAAQ,uBAAR;AACAR,GAAG,CAACQ,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AAEAV,GAAG,CAACW,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBZ,EAAAA,EAAE,CAACa,MAAH,CAAU,GAAV,EACGC,IADH,CACQ,OADR,EAEGC,IAFH,CAEQ,UAACC,KAAD,EAAW;AACfJ,IAAAA,GAAG,CAACK,IAAJ,CAASD,KAAT;AACD,GAJH,WAKS,UAACE,GAAD,EAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAN,IAAAA,GAAG,CAACK,IAAJ,CAAS,sBAAT;AACD,GARH;AASD,CAVD;AAYAlB,GAAG,CAACsB,IAAJ,CAAS,WAAT,EAAsB,UAACV,GAAD,EAAMC,GAAN,EAAc;AAClCU,EAAAA,QAAQ,CAACC,cAAT,CAAwBZ,GAAxB,EAA6BC,GAA7B,EAAkCZ,EAAlC,EAAsCwB,wBAAtC;AACD,CAFD;AAIAzB,GAAG,CAACsB,IAAJ,CAAS,SAAT,EAAoB,UAACV,GAAD,EAAMC,GAAN,EAAc;AAChCa,EAAAA,MAAM,CAACC,YAAP,CAAoBf,GAApB,EAAyBC,GAAzB,EAA8BZ,EAA9B,EAAkCwB,wBAAlC;AACD,CAFD;AAIAzB,GAAG,CAACsB,IAAJ,CAAS,QAAT,EAAmB,UAACV,GAAD,EAAMC,GAAN,EAAc;AAC/Be,EAAAA,KAAK,CAACC,aAAN,CAAoBjB,GAApB,EAAyBC,GAAzB,EAA8BZ,EAA9B;AACD,CAFD;AAIAD,GAAG,CAAC8B,GAAJ,CAAQ,eAAR,EAAyB,UAAClB,GAAD,EAAMC,GAAN,EAAc;AACrCe,EAAAA,KAAK,CAACG,kBAAN,CAAyBnB,GAAzB,EAA8BC,GAA9B,EAAmCZ,EAAnC;AACD,CAFD;AAIAD,GAAG,CAACW,GAAJ,CAAQ,kBAAR,EAA4B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxCN,EAAAA,QAAQ,CAACU,KAAT,CAAee,OAAf,CAAuB,UAAC3B,IAAD,EAAU;AAC/B,QAAIA,IAAI,CAAC4B,EAAL,KAAYrB,GAAG,CAACsB,MAAJ,CAAWC,MAA3B,EAAmC;AACjC,aAAOtB,GAAG,CAACH,IAAJ,CAASL,IAAT,CAAP;AACD;AACF,GAJD,EADwC,CAMxC;AACD,CAPD;AASAL,GAAG,CAACoC,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B,EAAqC;AAAA,SACnCnB,OAAO,CAACC,GAAR,CAAY,6CAAZ,CADmC;AAAA,CAArC","sourcesContent":["import express from \"express\";\r\nimport bodyParser from \"body-parser\";\r\nimport cors from \"cors\";\r\nimport bcrypt from \"bcrypt-nodejs\";\r\nimport knex from \"knex\";\r\nimport * as image from \"./controllers/image\";\r\nimport * as signin from \"./controllers/signin\";\r\nimport * as register from \"./controllers/register\";\r\nconst app = express();\r\n\r\nconst db = knex({\r\n  client: \"pg\",\r\n  connection: {\r\n    host: \"127.0.0.1\",\r\n    user: \"postgres\",\r\n    password: \"password\",\r\n    database: \"smartbrains\",\r\n  },\r\n});\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\n\r\napp.get(\"/\", (req, res) => {\r\n  db.select(\"*\")\r\n    .from(\"users\")\r\n    .then((users) => {\r\n      res.send(users);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      res.send(\"something went wrong\");\r\n    });\r\n});\r\n\r\napp.post(\"/register\", (req, res) => {\r\n  register.handleRegister(req, res, db, bcrypt);\r\n});\r\n\r\napp.post(\"/signin\", (req, res) => {\r\n  signin.handleSignin(req, res, db, bcrypt);\r\n});\r\n\r\napp.post(\"/image\", (req, res) => {\r\n  image.handleApiCall(req, res, db);\r\n});\r\n\r\napp.put(\"/imageSuccess\", (req, res) => {\r\n  image.handleImageSuccess(req, res, db);\r\n});\r\n\r\napp.get(\"/profile/:userId\", (req, res) => {\r\n  database.users.forEach((user) => {\r\n    if (user.id === req.params.userId) {\r\n      return res.json(user);\r\n    }\r\n  });\r\n  // res.json('no user')\r\n});\r\n\r\napp.listen(process.env.PORT || 3000, () =>\r\n  console.log(\"node-color-detect app running on port 3000!\")\r\n);\r\n"],"file":"api.js"}