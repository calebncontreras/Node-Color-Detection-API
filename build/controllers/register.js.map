{"version":3,"sources":["../../src/controllers/register.js"],"names":["handleRegister","req","res","db","bcrypt","body","email","name","password","hash","hashSync","transaction","trx","insert","into","returning","then","loginEmail","joined","Date","user","json","commit","rollback","err","console","log","status","send"],"mappings":";;;;;;;AAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,EAAX,EAAeC,MAAf,EAA0B;AAAA,kBACpBH,GAAG,CAACI,IADgB;AAAA,MAC9CC,KAD8C,aAC9CA,KAD8C;AAAA,MACvCC,IADuC,aACvCA,IADuC;AAAA,MACjCC,QADiC,aACjCA,QADiC;AAEtD,MAAMC,IAAI,GAAGL,MAAM,CAACM,QAAP,CAAgBF,QAAhB,CAAb;AACAL,EAAAA,EAAE,CAACQ,WAAH,CAAe,UAACC,GAAD,EAAS;AACtBA,IAAAA,GAAG,CACAC,MADH,CACU;AACNJ,MAAAA,IAAI,EAAEA,IADA;AAENH,MAAAA,KAAK,EAAEA;AAFD,KADV,EAKGQ,IALH,CAKQ,OALR,EAMGC,SANH,CAMa,OANb,EAOGC,IAPH,CAOQ,UAACC,UAAD,EAAgB;AACpB,aAAOL,GAAG,CAAC,OAAD,CAAH,CACJG,SADI,CACM,GADN,EAEJF,MAFI,CAEG;AACNP,QAAAA,KAAK,EAAEW,UAAU,CAAC,CAAD,CADX;AAENV,QAAAA,IAAI,EAAEA,IAFA;AAGNW,QAAAA,MAAM,EAAE,IAAIC,IAAJ;AAHF,OAFH,EAOJH,IAPI,CAOC,UAACI,IAAD,EAAU;AACdlB,QAAAA,GAAG,CAACmB,IAAJ,CAASD,IAAI,CAAC,CAAD,CAAb;AACD,OATI,CAAP;AAUD,KAlBH,EAmBGJ,IAnBH,CAmBQJ,GAAG,CAACU,MAnBZ,WAoBSV,GAAG,CAACW,QApBb;AAqBD,GAtBD,WAsBS,UAACC,GAAD,EAAS;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAtB,IAAAA,GAAG,CAACyB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,oBAArB;AACD,GAzBD;AA0BD,CA7BM","sourcesContent":["export const handleRegister = (req, res, db, bcrypt) => {\r\n  const { email, name, password } = req.body;\r\n  const hash = bcrypt.hashSync(password);\r\n  db.transaction((trx) => {\r\n    trx\r\n      .insert({\r\n        hash: hash,\r\n        email: email,\r\n      })\r\n      .into(\"login\")\r\n      .returning(\"email\")\r\n      .then((loginEmail) => {\r\n        return trx(\"users\")\r\n          .returning(\"*\")\r\n          .insert({\r\n            email: loginEmail[0],\r\n            name: name,\r\n            joined: new Date(),\r\n          })\r\n          .then((user) => {\r\n            res.json(user[0]);\r\n          });\r\n      })\r\n      .then(trx.commit)\r\n      .catch(trx.rollback);\r\n  }).catch((err) => {\r\n    console.log(err);\r\n    res.status(400).send(\"unable to register\");\r\n  });\r\n};\r\n"],"file":"register.js"}