{"version":3,"sources":["../../src/controllers/image.js"],"names":["app","Clarifai","App","apiKey","handleApiCall","req","res","db","body","image","userId","id","console","log","models","predict","clarifai","COLOR_MODEL","then","data","json","error","consoSle","status","handleImageSuccess","user","returning","select","from","where","increment","err","saveImageData","insert"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,GAAG,GAAG,IAAIC,QAAQ,CAACC,GAAb,CAAiB;AAC3BC,EAAAA,MAAM,EAAE;AADmB,CAAjB,CAAZ;;AAIO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAMC,GAAN,EAAWC,EAAX,EAAkB;AAC7C;AAD6C,kBAEfF,GAAG,CAACG,IAFW;AAAA,MAErCC,KAFqC,aAErCA,KAFqC;AAAA,MAE1BC,MAF0B,aAE9BC,EAF8B;AAG7CC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAT,EAAAA,GAAG,CAACc,MAAJ,CACGC,OADH,CACWC,qBAASC,WADpB,EACiCR,KADjC,EAEE;AAFF,GAGGS,IAHH,CAGQ,UAACC,IAAD,EAAU;AACd;AACAb,IAAAA,GAAG,CAACc,IAAJ,CAASD,IAAT;AACD,GANH,WAOS,UAACE,KAAD,EAAW;AAChBC,IAAAA,QAAQ,CAACT,GAAT,CAAaQ,KAAb;AACAf,IAAAA,GAAG,CAACiB,MAAJ,CAAW,GAAX,EAAgBH,IAAhB,CAAqB,yBAArB;AACD,GAVH;AAWD,CAfM;;;;AAiBA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACnB,GAAD,EAAMC,GAAN,EAAWC,EAAX,EAAkB;AAClD,MAAMkB,IAAI,GAAGpB,GAAG,CAACG,IAAjB;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYY,IAAZ;AACAlB,EAAAA,EAAE,CAACmB,SAAH,CAAa,GAAb,EACGC,MADH,CACU,SADV,EAEGC,IAFH,CAEQ,OAFR,EAGGC,KAHH,CAGS,IAHT,EAGe,GAHf,EAGoBJ,IAAI,CAACd,EAHzB,EAIGmB,SAJH,CAIa,SAJb,EAIwB,CAJxB,EAKGZ,IALH,CAKQ,UAACO,IAAD,EAAU;AACdnB,IAAAA,GAAG,CAACc,IAAJ,CAASK,IAAI,CAAC,CAAD,CAAb;AACD,GAPH,WAQS,UAACM,GAAD,EAAS;AACdnB,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CkB,GAA3C;AACD,GAVH;AAWD,CAfM;;;;AAiBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAC3B,GAAD,EAAMC,GAAN,EAAWC,EAAX,EAAkB;AAC7C,MAAMkB,IAAI,GAAGpB,GAAG,CAACG,IAAjB;AACAD,EAAAA,EAAE,CAAC,OAAD,CAAF,CAAY0B,MAAZ;AACD,CAHM","sourcesContent":["import clarifai from 'clarifai';\r\n\r\nconst app = new Clarifai.App({\r\n  apiKey: '72e02b44ed5943c4b2bc5e1cf6a80c4c',\r\n});\r\n\r\nexport const handleApiCall = (req, res, db) => {\r\n  // console.log(req.body);\r\n  const { image, id: userId } = req.body;\r\n  console.log(image);\r\n  app.models\r\n    .predict(clarifai.COLOR_MODEL, image)\r\n    // .then((res) => res.json())\r\n    .then((data) => {\r\n      // console.log(data);\r\n      res.json(data);\r\n    })\r\n    .catch((error) => {\r\n      consoSle.log(error);\r\n      res.status(400).json('Could not work with api');\r\n    });\r\n};\r\n\r\nexport const handleImageSuccess = (req, res, db) => {\r\n  const user = req.body;\r\n\r\n  console.log(user);\r\n  db.returning('*')\r\n    .select('entries')\r\n    .from('users')\r\n    .where('id', '=', user.id)\r\n    .increment('entries', 1)\r\n    .then((user) => {\r\n      res.json(user[0]);\r\n    })\r\n    .catch((err) => {\r\n      console.log('/handleImageSuccess error: ', err);\r\n    });\r\n};\r\n\r\nexport const saveImageData = (req, res, db) => {\r\n  const user = req.body;\r\n  db('users').insert();\r\n};\r\n"],"file":"image.js"}